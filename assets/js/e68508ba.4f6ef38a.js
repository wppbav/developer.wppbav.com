"use strict";(self.webpackChunkthe_fount=self.webpackChunkthe_fount||[]).push([[712],{6035:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=n(4848),t=n(8453);const i={},a="Filters & Sorting",o={id:"filters",title:"Filters & Sorting",description:"To allow you to retrieve only the data that you need each resource comes with a set of filters. Some filters are globally available throughout all resources, while some are resource-specific.",source:"@site/versioned_docs/version-1.0/filters.md",sourceDirName:".",slug:"/filters",permalink:"/docs/1.x/filters",draft:!1,unlisted:!1,editUrl:"https://github.com/wppbav/developer.wppbav.com/edit/main/versioned_docs/version-1.0/filters.md",tags:[],version:"1.0",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Expansions",permalink:"/docs/1.x/expansions"},next:{title:"Relationship Objects Schema",permalink:"/docs/1.x/relationship-schema"}},l={},c=[{value:"Searching",id:"searching",level:2},{value:"Sorting Results",id:"sorting-results",level:2},{value:"Updated Since",id:"updated-since",level:2},{value:"Pagination",id:"pagination",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"filters--sorting",children:"Filters & Sorting"})}),"\n",(0,s.jsx)(r.p,{children:"To allow you to retrieve only the data that you need each resource comes with a set of filters. Some filters are globally available throughout all resources, while some are resource-specific."}),"\n",(0,s.jsx)(r.p,{children:"Each resource documentation contains a list of filters that can be applied. Below you'll find information for the globally available filters."}),"\n",(0,s.jsx)(r.p,{children:"Filters are applied via query parameters to the request URL. For example, to search the brands index for a brand name, you'd perform the following request:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-http",metastring:"request",children:"GET /api/v1/brands?s=Facebook\n"})}),"\n",(0,s.jsx)(r.h2,{id:"searching",children:"Searching"}),"\n",(0,s.jsxs)(r.p,{children:["Most resources contain searching options, but not all. Please refer to the list for each resource. Where available, the searching works in the same way using the ",(0,s.jsx)(r.code,{children:"s"})," query parameter, followed by your search string."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-http",metastring:"request",children:"GET /api/v1/brands?s=Facebook\n"})}),"\n",(0,s.jsx)(r.h2,{id:"sorting-results",children:"Sorting Results"}),"\n",(0,s.jsx)(r.p,{children:"All index resources can be sorted to present data in a specific order. Default sorting varies by resource and can be found in the respective resource documentation."}),"\n",(0,s.jsx)(r.p,{children:'Each resource also has a set number of "sortable fields" which is listed in the resource documentation.'}),"\n",(0,s.jsxs)(r.p,{children:["Sorting is done in two steps, by defining the field you want to sort by (",(0,s.jsx)(r.code,{children:"order_by"})," query parameter), as well as which order you want to sort (",(0,s.jsx)(r.code,{children:"order"})," query parameter)."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"asc"})," is used as value for ascending order."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"desc"})," is used as value for descending order."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"A sorting query to show brands in ascending order by name (A-Z) may look like this:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-http",metastring:"request",children:"GET /api/v1/brands?order_by=name&order=asc\n"})}),"\n",(0,s.jsx)(r.h2,{id:"updated-since",children:"Updated Since"}),"\n",(0,s.jsxs)(r.p,{children:["You may choose to retrieve data on an index request that has been updated after a specific date and time. This is done via the ",(0,s.jsx)(r.code,{children:"updated_since"})," query parameter. This takes a date time value of ",(0,s.jsx)(r.code,{children:"YYYY-MM-DD HH:II:SS"}),"."]}),"\n",(0,s.jsx)(r.p,{children:"A request to show brands that have been updated only after January 1, 2021 may look like this:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-http",metastring:"request",children:"GET /api/v1/brands?updated_since=2021-01-01\n"})}),"\n",(0,s.jsx)(r.h2,{id:"pagination",children:"Pagination"}),"\n",(0,s.jsxs)(r.p,{children:["Please refer to the ",(0,s.jsx)(r.a,{href:"/docs/1.x/pagination",children:"pagination section"})," of the documentation for more information on pagination."]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var s=n(6540);const t={},i=s.createContext(t);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);