"use strict";(self.webpackChunkthe_fount=self.webpackChunkthe_fount||[]).push([[2648],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),f=a,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={},o="Filters & Sorting",l={unversionedId:"customizing/filters",id:"customizing/filters",title:"Filters & Sorting",description:"Filters",source:"@site/docs/customizing/filters.md",sourceDirName:"customizing",slug:"/customizing/filters",permalink:"/docs/2.x/customizing/filters",draft:!1,editUrl:"https://github.com/wppbav/developer.wppbav.com/edit/main/docs/customizing/filters.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Configurable fields",permalink:"/docs/2.x/customizing/fields"},next:{title:"Includes",permalink:"/docs/2.x/customizing/includes"}},s={},u=[{value:"Filters",id:"filters",level:2},{value:"Sorting Results",id:"sorting-results",level:2},{value:"Updated Since",id:"updated-since",level:2},{value:"Pagination",id:"pagination",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"filters--sorting"},"Filters & Sorting"),(0,a.kt)("h2",{id:"filters"},"Filters"),(0,a.kt)("p",null,"To allow you to retrieve only the data that you need each resource comes with a set of filters. Some filters are\nglobally available throughout all resources, while some are resource-specific."),(0,a.kt)("p",null,"Each resource documentation contains a list of which fields are filterable. Below you'll find information for the\nglobally available filters."),(0,a.kt)("p",null,"Filters are applied via query parameters to the request URL. They are built up on the format: ",(0,a.kt)("inlineCode",{parentName:"p"},"filter[field]=value"),"."),(0,a.kt)("p",null,'For example, to search for brands with the name "Facebook" you would use the following request:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"GET /api/v2/brands?filter[name]=Facebook\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},'In general all filters apart from ID filters are applied using a like/contains search. This means that a search for "\nFacebook" will also return "Facebook Messenger".')),(0,a.kt)("h2",{id:"sorting-results"},"Sorting Results"),(0,a.kt)("p",null,"All index resources can be sorted to present data in a specific order. Default sorting varies by resource and can be\nfound in the respective resource documentation. Generally resources are sorted by their ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," field in ascending order."),(0,a.kt)("p",null,'Each resource also has a set number of "sortable fields". Each endpoint documentation will list which fields are\nsortable.'),(0,a.kt)("p",null,"You define the sort order by setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"sort")," parameter and the field you want to sort on. To sort in descending order\nyou prefix the column with a minus ",(0,a.kt)("inlineCode",{parentName:"p"},"-")," sign."),(0,a.kt)("p",null,"A sorting query to show brands by name may look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"# Sort in ascending order (A-Z).\nGET /api/v2/brands?sort=name\n\n# Sort in descending order (Z-A).\nGET /api/v2/brands?sort=-name\n")),(0,a.kt)("h2",{id:"updated-since"},"Updated Since"),(0,a.kt)("p",null,"You may choose to retrieve data on an index request that has been updated after a specific date and time. This is done\nvia the ",(0,a.kt)("inlineCode",{parentName:"p"},"updated_since")," filter. This takes a date time value of ",(0,a.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DD HH:II:SS"),"."),(0,a.kt)("p",null,"A request to show brands that have been updated only after January 1, 2023 may look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"GET /api/v2/brands?filter[updated_since]=2023-01-01\n")),(0,a.kt)("p",null,"Please note that update times are generally shallow. For example, if a brand's brandscape data is updated, the updated\ntimestamp for the brand itself does not change. However, if the brand itself receives an update to its global brand\nname, the timestamp is changed."),(0,a.kt)("h2",{id:"pagination"},"Pagination"),(0,a.kt)("p",null,"Please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/docs/2.x/pagination"},"pagination section")," of the documentation for more information on pagination."))}d.isMDXComponent=!0}}]);