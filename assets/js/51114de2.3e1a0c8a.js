"use strict";(self.webpackChunkthe_fount=self.webpackChunkthe_fount||[]).push([[8658],{1235:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"query/brandscape-data","title":"Brandscape Data","description":"The Brandscape Data API is where you can query for the research data. The scores for each brand in a country is what we","source":"@site/versioned_docs/version-1.0/query/brandscape-data.md","sourceDirName":"query","slug":"/query/brandscape-data","permalink":"/docs/1.x/query/brandscape-data","draft":false,"unlisted":false,"tags":[],"version":"1.0","frontMatter":{"split":true},"sidebar":"docsSidebar","previous":{"title":"What are query endpoints?","permalink":"/docs/1.x/query/"},"next":{"title":"Best Countries","permalink":"/docs/1.x/query/best-countries"}}');var d=r(4848),i=r(8453);const t={split:!0},c="Brandscape Data",a={},l=[{value:"Querying for data",id:"querying-for-data",level:2},{value:"Schema",id:"schema",level:3},{value:"Metrics Object Schema",id:"metrics-object-schema",level:4},{value:"Configurable Fields",id:"configurable-fields",level:2},{value:"Expansions",id:"expansions",level:2},{value:"Filters",id:"filters",level:2},{value:"Sorting",id:"sorting",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"brandscape-data",children:"Brandscape Data"})}),"\n",(0,d.jsx)(n.p,{children:"The Brandscape Data API is where you can query for the research data. The scores for each brand in a country is what we\ncall a Brandscape."}),"\n",(0,d.jsx)(n.h2,{id:"querying-for-data",children:"Querying for data"}),"\n",(0,d.jsx)(n.p,{children:"To browse the data via the API, use the list endpoint:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-http",metastring:"request",children:"GET /api/v1/brandscape-data\n"})}),"\n",(0,d.jsx)(n.p,{children:"Querying the brandscape data requires at least one filter (see below). Otherwise you will be returned a 401 bad request\nerror."}),"\n",(0,d.jsx)(n.p,{children:"Each item in the list endpoint response is unique on:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Brand"}),"\n",(0,d.jsx)(n.li,{children:"Study"}),"\n",(0,d.jsx)(n.li,{children:"Category"}),"\n",(0,d.jsx)(n.li,{children:"Base"}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"schema",children:"Schema"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"id"})}),(0,d.jsx)(n.td,{children:"integer"}),(0,d.jsx)(n.td,{children:"The system ID for the brandscape data point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"brand"})}),(0,d.jsx)(n.td,{children:"object"}),(0,d.jsx)(n.td,{children:"A brand relationship object."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"study"})}),(0,d.jsx)(n.td,{children:"object"}),(0,d.jsx)(n.td,{children:"A study relationship object."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"base"})}),(0,d.jsx)(n.td,{children:"object"}),(0,d.jsx)(n.td,{children:"A base relationship object."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"category"})}),(0,d.jsx)(n.td,{children:"object"}),(0,d.jsx)(n.td,{children:"A category relationship object."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"metrics"})}),(0,d.jsx)(n.td,{children:"array"}),(0,d.jsx)(n.td,{children:"The list of metric objects for the data point."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"created_at"})}),(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"A datetime string when this brand was first created."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"updated_at"})}),(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"A datetime string when this brand was last updated."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"metrics-object-schema",children:"Metrics Object Schema"}),"\n",(0,d.jsxs)(n.p,{children:["Each metric object in the ",(0,d.jsx)(n.code,{children:"metrics"})," array consists of the following schema."]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"id"})}),(0,d.jsx)(n.td,{children:"integer"}),(0,d.jsx)(n.td,{children:"The Metric object ID."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"The human readable name of the metric."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"key"})}),(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"A machine readable key for the metric."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"group"})}),(0,d.jsx)(n.td,{children:"object"}),(0,d.jsx)(n.td,{children:"A brand metric group relationship object."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"scores"})}),(0,d.jsx)(n.td,{children:"object"}),(0,d.jsxs)(n.td,{children:["An object with three keys: ",(0,d.jsx)(n.code,{children:"rank"}),", ",(0,d.jsx)(n.code,{children:"percentage"})," and ",(0,d.jsx)(n.code,{children:"value"})," returning either ",(0,d.jsx)(n.code,{children:"null"})," or ",(0,d.jsx)(n.code,{children:"float"})]})]})]})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Note on Scores:"})," Each metric will have different available scores. Some metrics have just a ",(0,d.jsx)(n.code,{children:"value"})," score, while\nothers have ",(0,d.jsx)(n.code,{children:"rank"}),", ",(0,d.jsx)(n.code,{children:"percentage"})," or both of the latter. When one of them returns ",(0,d.jsx)(n.code,{children:"null"})," you can interpret it as not\nbeing available for the metric. Inspect the Metrics resource further for boolean values of which score types each metric\nsupports."]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n    "data": [\n        {\n            "id": 865156,\n            "brand": {\n                "id": 368,\n                "name": "Facebook",\n                "bav_key": -18585\n            },\n            "study": {\n                "id": 381,\n                "name": "UK - Adults 2020",\n                "year": 2020,\n                "country": "United Kingdom"\n            },\n            "base": {\n                "id": 1,\n                "name": "All Adults"\n            },\n            "category": {\n                "id": 88,\n                "name": "Social Media",\n                "sector": "Telecommunications"\n            },\n            "metrics": [\n                {\n                    "id": 1,\n                    "name": "Brand Base",\n                    "key": "brand_base",\n                    "group": {\n                        "id": 1,\n                        "name": "Base Sizes"\n                    },\n                    "scores": {\n                        "rank": null,\n                        "percentage": null,\n                        "value": 100.255100000000000\n                    }\n                }\n                // ...\n            ],\n            "created_at": "2021-03-02T11:28:21.000000Z",\n            "updated_at": "2021-03-26T10:49:49.000000Z"\n        }\n        //...\n    ]\n    // ...\n}\n'})}),"\n",(0,d.jsx)(n.h2,{id:"configurable-fields",children:"Configurable Fields"}),"\n",(0,d.jsxs)(n.p,{children:["If you only need some of the fields you can optimize the request for a leaner response (\nsee ",(0,d.jsx)(n.a,{href:"/docs/1.x/configurable-fields",children:"Configurable Fields"})," for more information). The following fields can be toggled:"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"id"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"brand"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"study"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"base"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"category"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"metrics"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"created_at"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"expansions",children:"Expansions"}),"\n",(0,d.jsxs)(n.p,{children:["To create a leaner response, some data related to brandscape data are not included in the response by default. See\nthe ",(0,d.jsx)(n.a,{href:"/docs/1.x/expansions",children:"Expansions section"})," for more information on how this works. The following relationships can be\nexpanded for the Brandscape Data API:"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"years"})," - A years relationship object containing the year and its system ID."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"countries"})," - A countries relationship object containing the country, its region and system ID."]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"filters",children:"Filters"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.em,{children:"At least one of the data filters (studies, brands or search) needs to be applied."})}),"\n",(0,d.jsx)(n.p,{children:"The endpoint supports the following filters:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/1.x/pagination",children:"Pagination"})}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"/docs/1.x/filters",children:"Searching"})," by brand name."]}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/1.x/filters",children:"Updated Since"})}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"brands"})," - A comma separated list of brand IDs to find."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"studies"})," - A comma separated list of study IDs to find."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"years"})," - A comma separated list of year IDs to find."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"countries"})," - A comma separated list of country IDs to find."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"bases"})," - A comma separated list of study base IDs to find."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"year_number"})," - A comma separated list of years (for example: 2020,2021) to find."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"country_code"})," - A comma-separated list of ISO-Alpha2 country codes (for example: US,DE) to find data from."]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"sorting",children:"Sorting"}),"\n",(0,d.jsx)(n.p,{children:"By default, the data will be sorted by ID. This sorting does not require any specific parameter. You can also order it\nby any of the metric columns. This is useful for getting a toplist of data."}),"\n",(0,d.jsxs)(n.p,{children:["The sorting parameter in that case takes the form of ",(0,d.jsx)(n.code,{children:"metricKey_scoreType"}),". For example:"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"metrickey_rank"})," (rank scores), ",(0,d.jsx)(n.code,{children:"metrickey_pct"})," (percentage scores) or ",(0,d.jsx)(n.code,{children:"metrickey"})," (value scores)"]}),"\n",(0,d.jsxs)(n.p,{children:["If you supply ",(0,d.jsx)(n.code,{children:"order_by"})," with an incorrect parameter, a ",(0,d.jsx)(n.code,{children:"400 - Bad Request"})," response will be returned to you."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(6540);const d={},i=s.createContext(d);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);