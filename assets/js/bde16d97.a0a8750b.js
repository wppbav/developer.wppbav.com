"use strict";(self.webpackChunkthe_fount=self.webpackChunkthe_fount||[]).push([[3209],{5402:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var s=i(4848),n=i(8453);const r={},l="Cities",c={id:"core-resources/cities",title:"Cities",description:"What are cities?",source:"@site/docs/core-resources/cities.md",sourceDirName:"core-resources",slug:"/core-resources/cities",permalink:"/docs/2.x/core-resources/cities",draft:!1,unlisted:!1,editUrl:"https://github.com/wppbav/developer.wppbav.com/edit/main/docs/core-resources/cities.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Countries",permalink:"/docs/2.x/core-resources/countries"},next:{title:"GICS Sectors",permalink:"/docs/2.x/core-resources/gics-sectors"}},d={},h=[{value:"What are cities?",id:"what-are-cities",level:2},{value:"List all cities",id:"list-all-cities",level:2},{value:"Get a city",id:"get-a-city",level:2},{value:"Schema",id:"schema",level:2},{value:"Full response schema",id:"full-response-schema",level:3},{value:"Additional Filters",id:"additional-filters",level:2},{value:"Relationships &amp; includes",id:"relationships--includes",level:2}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"cities",children:"Cities"})}),"\n",(0,s.jsx)(t.h2,{id:"what-are-cities",children:"What are cities?"}),"\n",(0,s.jsx)(t.p,{children:"Some BAV resources rely on segmenting data by cities. This resource contains a list of all the cities in\nthe world with a population over 500 with additional metadata for system use."}),"\n",(0,s.jsx)(t.h2,{id:"list-all-cities",children:"List all cities"}),"\n",(0,s.jsx)(t.p,{children:"To list all of the cities and browse them via the API, use the list endpoint:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET /api/v2/cities\n"})}),"\n",(0,s.jsx)(t.h2,{id:"get-a-city",children:"Get a city"}),"\n",(0,s.jsx)(t.p,{children:"You may also directly retrieve a city's details if you already have its system ID."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-http",metastring:"request",children:"GET /api/v2/cities/123\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Where ",(0,s.jsx)(t.code,{children:"123"})," is the system ID of the city."]}),"\n",(0,s.jsx)(t.h2,{id:"schema",children:"Schema"}),"\n",(0,s.jsx)(t.h3,{id:"full-response-schema",children:"Full response schema"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Key"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Filterable"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Sortable"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Configurable"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"id"})}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["\u2705"," (exact)"]}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"The system ID for the country."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"name"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"The name of the country in English."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"latitude"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"longitude"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"timezone"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:'The timezone for the city, e.g. "Europe/London"'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"population"})}),(0,s.jsx)(t.td,{children:"ineteger"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"The population of the city."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"elevation"})}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"The city's elevation. Also see digital_elevation_model which is available for more cities."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"digital_elevation_model"})}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"Another measure of the city's elevation."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"geonames_feature_code"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsxs)(t.td,{children:["The ",(0,s.jsx)(t.a,{href:"http://www.geonames.org/export/codes.html",children:"feature code"})," from Geonames, allowing you to filter on type of city."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"created_at"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"A datetime string when this city was first created in the system."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"updated_at"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["(",(0,s.jsx)(t.a,{href:"../customizing/filters",children:"updated since"}),")"]}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{children:"A datetime string when this city was last updated in the system."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"additional-filters",children:"Additional Filters"}),"\n",(0,s.jsxs)(t.p,{children:["For convenience, we have a set of additional filters that are not available in\nthe ",(0,s.jsx)(t.a,{href:"/docs/2.x/customizing/filters",children:"default filters"})," or are part of the columns. These are:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"capitals"})," - Set to ",(0,s.jsx)(t.code,{children:"true"})," to only return capital cities."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"regions"})," - Set to a comma-separated list of region IDs to only return cities in those regions."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"countries"})," - Set to a comma-separated list of country IDs to only return cities in those countries."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"in_best_countries"})," - Set to a year number (e.g. 2023) to only return cities that are included in the Best Countries ranking for that year."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"relationships--includes",children:"Relationships & includes"}),"\n",(0,s.jsxs)(t.p,{children:["By default, relationships apart from the sector are not included. See\nthe ",(0,s.jsx)(t.a,{href:"../customizing/includes",children:"includes section"})," for more information on how this works. The following relationships\nare available:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"country"})," - The ",(0,s.jsx)(t.a,{href:"/docs/2.x/core-resources/countries",children:"country"})," that the city is located in."]}),"\n"]})]})}function a(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>c});var s=i(6540);const n={},r=s.createContext(n);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);