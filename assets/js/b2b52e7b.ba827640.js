"use strict";(self.webpackChunkthe_fount=self.webpackChunkthe_fount||[]).push([[344],{7084:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>a,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var r=i(4848),s=i(8453);const d={split:!0},t="Countries",c={id:"core-resources/countries",title:"Countries",description:"Many of the BAV resources rely on segmenting data by countries. This resource contains a list of all the countries in the world, with additional ISO codes and metadata for system use.",source:"@site/versioned_docs/version-1.0/core-resources/countries.md",sourceDirName:"core-resources",slug:"/core-resources/countries",permalink:"/docs/1.x/core-resources/countries",draft:!1,unlisted:!1,editUrl:"https://github.com/wppbav/developer.wppbav.com/edit/main/versioned_docs/version-1.0/core-resources/countries.md",tags:[],version:"1.0",frontMatter:{split:!0},sidebar:"docsSidebar",previous:{title:"Collections",permalink:"/docs/1.x/core-resources/collections"},next:{title:"Brand Metric Groups",permalink:"/docs/1.x/core-resources/metric-groups"}},l={},o=[{value:"List Countries",id:"list-countries",level:2},{value:"Schema",id:"schema",level:3},{value:"Get a Category",id:"get-a-category",level:2},{value:"Schema",id:"schema-1",level:3},{value:"Configurable Fields",id:"configurable-fields",level:2},{value:"Expansions",id:"expansions",level:2},{value:"Filters",id:"filters",level:2},{value:"Sorting",id:"sorting",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"countries",children:"Countries"})}),"\n",(0,r.jsx)(n.p,{children:"Many of the BAV resources rely on segmenting data by countries. This resource contains a list of all the countries in the world, with additional ISO codes and metadata for system use."}),"\n",(0,r.jsx)(n.h2,{id:"list-countries",children:"List Countries"}),"\n",(0,r.jsx)(n.p,{children:"To list all of the countries and browse them via the API, use the list endpoint:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",metastring:"request",children:"GET /api/v1/countries\n"})}),"\n",(0,r.jsx)(n.p,{children:"The brand list response contains details about the country."}),"\n",(0,r.jsx)(n.h3,{id:"schema",children:"Schema"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"The system ID for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The name of the country in English."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"native_name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The name of the country in its native language."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The two-letter code (ISO 3166-1 alpha-2) for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_alpha3"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The three-letter code (ISO 3166-1 alpha-3) for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_numeric"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The numeric code (ISO 3166-1 numeric) for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"flag"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"A URL to the country flag in SVG format."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gdp"})}),(0,r.jsx)(n.td,{children:"float"}),(0,r.jsx)(n.td,{children:"The country's GDP in USD from the latest published period."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gdp_capita"})}),(0,r.jsx)(n.td,{children:"float"}),(0,r.jsx)(n.td,{children:"The country's GDP per capita in USD from the latest published period."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"population"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"The country's total population from the latest published period."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"region"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsxs)(n.td,{children:["An object with the region that this country belongs to ",(0,r.jsx)(n.a,{href:"/docs/1.x/relationship-schema",children:"(schema)"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "data": [\n        {\n            "id": 48,\n            "name": "United Kingdom",\n            "native_name": "United Kingdom",\n            "code": "GB",\n            "code_alpha3": "GBR",\n            "code_numeric": "826",\n            "flag": "https:\\/\\/wpp-fount-dev.s3.eu-west-2.amazonaws.com\\/flags\\/gb.svg",\n            "gdp": null,\n            "gdp_capita": null,\n            "population": 65110000,\n            "region": {\n                "id": 4,\n                "name": "Europe"\n            }\n        },\n        //...\n    ]\n    // ...\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"get-a-category",children:"Get a Category"}),"\n",(0,r.jsx)(n.p,{children:"You may also directly retrieve a country's details if you already have its system ID."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",metastring:"request",children:"GET /api/v1/countries/123\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Where ",(0,r.jsx)(n.code,{children:"123"})," is the system ID of the country."]}),"\n",(0,r.jsx)(n.p,{children:"You may also retrieve the country by its two-letter or three-letter ISO code by replacing the ID with it, like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",metastring:"request",children:"GET /api/v1/countries/GB\n"})}),"\n",(0,r.jsx)(n.h3,{id:"schema-1",children:"Schema"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"The system ID for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The name of the country in English."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"native_name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The name of the country in its native language."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The two-letter code (ISO 3166-1 alpha-2) for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_alpha3"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The three-letter code (ISO 3166-1 alpha-3) for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"code_numeric"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The numeric code (ISO 3166-1 numeric) for the country."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"flag"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"A URL to the country flag in SVG format."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gdp"})}),(0,r.jsx)(n.td,{children:"float"}),(0,r.jsx)(n.td,{children:"The country's GDP in USD from the latest published period."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gdp_capita"})}),(0,r.jsx)(n.td,{children:"float"}),(0,r.jsx)(n.td,{children:"The country's GDP per capita in USD from the latest published period."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"population"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"The country's total population from the latest published period."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"region"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsxs)(n.td,{children:["An object with the region that this country belongs to ",(0,r.jsx)(n.a,{href:"/docs/1.x/relationship-schema",children:"(schema)"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "data": {\n        "id": 48,\n        "name": "United Kingdom",\n        "native_name": "United Kingdom",\n        "code": "GB",\n        "code_alpha3": "GBR",\n        "code_numeric": "826",\n        "flag": "https:\\/\\/wpp-fount-dev.s3.eu-west-2.amazonaws.com\\/flags\\/gb.svg",\n        "gdp": null,\n        "gdp_capita": null,\n        "population": 65110000,\n        "region": {\n            "id": 4,\n            "name": "Europe"\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configurable-fields",children:"Configurable Fields"}),"\n",(0,r.jsxs)(n.p,{children:["If you only need some of the fields you can optimize the request for a leaner response (\nsee ",(0,r.jsx)(n.a,{href:"/docs/1.x/configurable-fields",children:"Configurable Fields"})," for more information). The following fields can be toggled:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"name"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"native_name"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"code_alpha3"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"code_numeric"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"flag"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"gdp"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"gdp_capita"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"population"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"region"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"expansions",children:"Expansions"}),"\n",(0,r.jsxs)(n.p,{children:["To create a leaner response data related to brands are not included in the response by default. See\nthe ",(0,r.jsx)(n.a,{href:"/docs/1.x/expansions",children:"Expansions section"})," for more information on how this works. The following relationships can be expanded:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"studies"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"filters",children:"Filters"}),"\n",(0,r.jsx)(n.p,{children:"The countries endpoint supports the following filters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/1.x/pagination",children:"Pagination"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/1.x/filters",children:"Searching"})," by brand name."]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/1.x/filters",children:"Updated Since"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"regions"})," - A comma-separated list of region IDs to only show countries from the specified region."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sorting",children:"Sorting"}),"\n",(0,r.jsxs)(n.p,{children:["The following fields are ",(0,r.jsx)(n.a,{href:"/docs/1.x/filters",children:"sortable"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"id"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"name"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"native_name"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"code_alpha3"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"code_numeric"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"flag"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"gdp"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"gdp_capita"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"population"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"region_id"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"created_at"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"updated_at"})}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var r=i(6540);const s={},d=r.createContext(s);function t(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);