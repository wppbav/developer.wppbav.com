"use strict";(self.webpackChunkthe_fount=self.webpackChunkthe_fount||[]).push([[5042],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(t),f=o,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||a;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},3554:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(7462),o=(t(7294),t(3905));const a={},i="Configurable fields",s={unversionedId:"customizing/fields",id:"customizing/fields",title:"Configurable fields",description:"Since the BAV data and The Fount API is expansive and endpoints contain a lot of data the API responses can easily grow",source:"@site/docs/customizing/fields.md",sourceDirName:"customizing",slug:"/customizing/fields",permalink:"/docs/2.x/customizing/fields",draft:!1,editUrl:"https://github.com/wppbav/developer.wppbav.com/edit/main/docs/customizing/fields.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Versioning",permalink:"/docs/2.x/versioning"},next:{title:"Filters & Sorting",permalink:"/docs/2.x/customizing/filters"}},l={},d=[{value:"Making a request",id:"making-a-request",level:2},{value:"Example: Getting a list of brands for a dropdown selection",id:"example-getting-a-list-of-brands-for-a-dropdown-selection",level:2}],c={toc:d},u="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configurable-fields"},"Configurable fields"),(0,o.kt)("p",null,"Since the BAV data and The Fount API is expansive and endpoints contain a lot of data the API responses can easily grow\nin size. A downside of REST APIs in general."),(0,o.kt)("p",null,"To prevent forcing you to retrieve a full object with all resource data, you may configure to request only specific\nfields."),(0,o.kt)("p",null,"You may choose to configure to include any fields in the response. By default all fields are included. If choose to\ninclude specific fields you will need to specify all fields you want to include. There is no option to exclude fields."),(0,o.kt)("p",null,"Fields loaded via ",(0,o.kt)("a",{parentName:"p",href:"/docs/2.x/customizing/includes"},"includes")," are not configurable. The fields included via these relations are slimmed-down\nrelation responses. Each endpoint documentation includes the schema for the relationship response alongside the full\nresponse."),(0,o.kt)("p",null,"Configurable fields are available on both indexes and single resource endpoints."),(0,o.kt)("h2",{id:"making-a-request"},"Making a request"),(0,o.kt)("p",null,"Configuring fields is done by adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"fields")," query parameter, the snake-case name of the resource, and passing a comma-separated string of field names,\nlike so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"GET /api/v2/brands?fields[brands]=id,name\n")),(0,o.kt)("h2",{id:"example-getting-a-list-of-brands-for-a-dropdown-selection"},"Example: Getting a list of brands for a dropdown selection"),(0,o.kt)("p",null,"Let's say you want to retrieve a list of brands to show in a dropdown for users to select. You'll want the brand ID for\nthe value and the name for the display label. Instead of forcing you to download the\nfull ",(0,o.kt)("a",{parentName:"p",href:"/docs/2.x/core-resources/brands"},"Brands response")," response, you may configure to only retrieve the columns you need."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"GET /api/v2/brands?fields[brands]=id,name\n")),(0,o.kt)("p",null,"This request would result in the following lean response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 369,\n      "name": "Microsoft"\n    }\n  ]\n}\n')))}p.isMDXComponent=!0}}]);